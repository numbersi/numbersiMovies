extends layout
block content
    .row-fluid
        .page-header
          div.row
            img.center-block(src=img, alt="", srcset="")
          h1.center-block.text-center=title
             .list-group
                each playList  in playNumList.reverse() 
                
                        a.list-group-item.playLink(href="javascript:void(0)" data-href=playList.playLink)
                            h3.list-group-item-heading.active=playList.num
                                  p.list-group-item-text=playList.playLinkTitle

        #myModal.modal.fade.bd-example-modal-lg(tabindex="-1", role="dialog", aria-labelledby="myLargeModalLabel", aria-hidden="true")
            .modal-dialog.modal-lg
            #videoModal.modal-content
                video#my-player(class="video-js vjs-fluid vjs-default-skin vjs-big-play-centered" controls)
                    source
    script.
        var player =null
        $(document).ready(function(){
            $('.playLink').click(function(){
                        const  url =$(this).data('href')
                        getPlayUrl(url)
                    })
            $('#myModal').on('hidden.bs.modal',function(e){
                if(player &&player.pause) player.pause()
            })
        })
                  function getPlayUrl(url){
                $.get(
                    '/search/getPlayUrl?type=dianying&url='+url,function(data,status){
                        if(data.startsWith('http'))
                           $('source').attr('src',data)
                            $('source').attr('type',"application/x-mpegURL")
                            $('#myModal').modal('show')
                            $('#myModalLabel').html('#{title}')
                            const playType = getPlayType(data)
                                        console.log(playType)
                                        console.log(data)
                            if(!player){
                               player = videojs('my-player',{
                                   sources: [{
                                        src: data,
                                        type: playType //"application/x-mpegURL"//'video/mp4'
                                    }]
                               });

                            }
                        }
                )}

        function getPlayType(url){
            if(url.split('?')[0].endsWith('.mp4')){
                return 'video/mp4'
            }
            return "application/x-mpegURL"
        }
